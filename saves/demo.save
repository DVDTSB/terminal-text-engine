{"name":"demo","inConversation":false,"extraInit":"(utilities, disk) => {}","load":"(utilities,disk) => {\r\n    console.log(colors.green(\"Welcome to the Demo!\"));\r\n    const room = utilities.getRoom(disk.roomId);\r\n    utilities.getRoom(disk.roomId).visits++;\r\n    console.log(colors.green(room.name));\r\n    console.log(colors.italic(room.desc));\r\n  }","actions":[{"name":"save","desc":"Save the game","func":"(utilities, disk, target) => {\r\n        utilities.save(disk.name);\r\n      }"},{"name":"items","desc":"View your items","func":"(utilities, disk, target) => {\r\n        utilities.getRoom(disk.roomId).items.forEach((item) => {\r\n          if (Array.isArray(item.name)) {\r\n            console.log(colors.green(item.name[0]));\r\n          } else {\r\n            console.log(colors.green(item.name));\r\n          }\r\n        });\r\n      }"},{"name":"look","keywords":["look","l"],"desc":"Look around","func":"(utilities, disk, target) => {\r\n        const room = utilities.getRoom(disk.roomId);\r\n        console.log(colors.green(room.name));\r\n        console.log(colors.italic(room.desc));\r\n      }"},{"name":"go","keywords":["go","g"],"desc":"Go to a room","func":"(utilities, disk, target) => {\r\n        const current_room = utilities.getRoom(disk.roomId);\r\n        const exit = utilities.getExit(current_room, target);\r\n        const look = utilities.getAction(\"look\");\r\n\r\n        if (exit) {\r\n          if (exit.block) {\r\n            console.log(colors.red(\"\\n      The exit is blocked\\n\"));\r\n          } else {\r\n            disk.roomId = exit.id;\r\n            look.func(utilities, disk, \"\");\r\n          }\r\n        } else {\r\n          console.log(colors.red(\"\\n      There is no exit that way\\n\"));\r\n        }\r\n      }"},{"name":"inventory","keywords":["inventory","i"],"desc":"View your inventory","func":"(utilities, disk, target) => {\r\n        console.log(colors.green(\"Inventory:\"));\r\n        if (disk.inventory.length == 0) {\r\n          console.log(colors.italic(\"\\n     You have nothing in your inventory\\n\"));\r\n        } else {\r\n          disk.inventory.forEach((item) => {\r\n            console.log(colors.blue(item.name) + \": \" + item.desc);\r\n          });\r\n        }\r\n      }"},{"name":"take","keywords":["take","t"],"desc":"Take an item","func":"(utilities, disk, target) => {\r\n        const current_room = utilities.getRoom(disk.roomId);\r\n        const items = current_room.items;\r\n        const item = items.find((i) => i.name == target);\r\n        if (item) {\r\n          if (item.isTakeable == true) {\r\n            disk.inventory.push(item);\r\n            delete current_room.items[items.indexOf(item)];\r\n            console.log(colors.green(`\\n      You took the ${item.name}\\n`));\r\n          } else {\r\n            console.log(colors.red(`\\n      You can't take the ${item.name}, dummy\\n`));\r\n          }\r\n        } else {\r\n          console.log(colors.red(`\\n      There is no ${target} here\\n`));\r\n        }\r\n      }"},{"name":"drop","keywords":["drop","d"],"desc":"Drop an item","func":"(utilities, disk, target) => {\r\n        const item = disk.inventory.find((i) => i.name == target);\r\n        if (item) {\r\n          const current_room = utilities.getRoom(disk.roomId);\r\n          current_room.items.push(item);\r\n          disk.inventory.splice(disk.inventory.indexOf(item), 1);\r\n          console.log(colors.green(`You dropped the ${item.name}`));\r\n        } else {\r\n          console.log(colors.red(`You don't have the ${target}`));\r\n        }\r\n      }"},{"name":"quit","keywords":["quit"],"desc":"quit","func":"(utilites, disk, target) =>{\r\n        process.exit();\r\n      }"},{"name":"talk","keywords":["talk","t"],"desc":"Talk to an NPC","func":"(utilities, disk, target) => {\r\n        console.log(\"amogus\")\r\n        disk.characters.forEach((character) => {\r\n          let fancy_func = (name) => {\r\n            if (name.toLowerCase() == target) {\r\n              disk.inConversation = true;\r\n              console.log(colors.grey.italic(\"\\n     You start talking to \" + name + \"...\\n\"));\r\n              console.log(colors.green(character.start_line));\r\n              let i = 0;\r\n              character.topics.forEach((topic) => {\r\n                console.log(colors.blue(`${i + 1}. `)+topic.option);\r\n                i++;\r\n              });\r\n              while(disk.inConversation)\r\n              {\r\n                const response = utilities.askForInput();\r\n                if (response[0] == \"exit\") {\r\n                  disk.inConversation = false;\r\n                  console.log(colors.grey.italic(\"\\n     You stop talking to \" + name + \"...\\n\"));\r\n                }\r\n                else if (!isNaN(response[0])) {\r\n                  console.log(colors.green(character.topics[response[0] - 1].response));\r\n                  delete character.topics[response[0] - 1];\r\n                }\r\n  \r\n              }\r\n            }else\r\n            {\r\n              console.log(colors.red(`There is no ${target} here`));\r\n            }\r\n          };\r\n          if(Array.isArray(character.name))\r\n          {\r\n            character.name.forEach((a) => fancy_func(a));\r\n          }else {\r\n            fancy_func(character.name);\r\n          }\r\n        });\r\n      }"}],"roomId":"forest","rooms":[{"id":"start","name":"The First Room","desc":"You are in an empty room. There is a DOOR, but it is overgrown with VINES. There is an AXE in the corner of the room.","items":[{"name":"door","desc":"It leads NORTH.","onAction":"(action) => {\r\n            if (action == \"use\") {\r\n              console.log(`Type GO NORTH to try the door.`);\r\n              return true;\r\n            }\r\n            return false;\r\n          }"},{"name":["vines","vine"],"desc":"They grew over the DOOR, blocking it from being opened."},null],"exits":[{"dir":"north","id":"forest"}],"visits":1},{"id":"forest","name":"A Forest","desc":"It's a forest. The trees are very tall. There is an old man near the door you just went trough. The door is not connected to anything, its just there.","exits":[{"dir":"south","id":"start"}],"visits":0}],"characters":[{"name":["John","old man","man"],"location":"forest","desc":"A tall, old man. He seems to be wise enough to know where you are.","start_line":"Hello there, young one, how can I help you?","times_attacked":0,"onAction":"(utilites, disk, action) =>{\r\n        if(action == \"attack\")\r\n        {\r\n          utilites.getCharacter(\"john\").times_attacked++;\r\n          times_attacked = utilites.getCharacter(\"john\").times_attacked;\r\n          if(times_attacked == 1)\r\n          {\r\n            console.log(\"You try to attack John, he quikly dodges your attack.\");\r\n            console.log(colors.green(\"There is no time to attack an old farmer like me. Maybe talking to me would be a better option?\"));\r\n          }\r\n          if(times_attacked == 2)\r\n          {\r\n            console.log(\"You try to attack John again, like before, he quikly dodges your attack. You can see he is getting annoyed.\");\r\n            console.log(colors.green(\"Should I repeat myselff?\"));\r\n          }\r\n          if(times_attacked == 3)\r\n          {\r\n            console.log(\"You try to attack John yet again, as expectedm he quikly dodges your attack.\");\r\n            console.log(colors.red(\"\\n      You died.\\n\"));\r\n            console.log(colors.grey.italic(\"\\n     L...\\n\"));\r\n          }\r\n          \r\n          return true;\r\n        }\r\n        return false;\r\n      }","topics":[{"option":"Ask him what his name is.","response":"My name is John, young one. I am a farmer.","removeOnRead":true},{"option":"Ask him how he got here.","response":"I was walking through the forest when I saw this door, seemengly going to nowhere.","removeOnRead":true},{"option":"Ask him where you are.","response":"We are in the magical forest of Neverwood","removeOnRead":true}],"chatlog":[]}],"inventory":[{"name":"axe","desc":"You could probably USE it to cut the VINES, unblocking the door.","isTakeable":true,"onAction":"(utilities,action) => {\r\n            if (action == \"use\") {\r\n              const room = utilities.getRoom(\"start\");\r\n              const exit = utilities.getExit(room, \"north\");\r\n\r\n              if (exit.block) {\r\n                delete exit.block;\r\n                console.log(\r\n                  `You cut through the VINES, unblocking the door to the NORTH.`\r\n                );\r\n              } else {\r\n                console.log(colors.red(\"There is nothing to use the Axe on.\"))\r\n              }\r\n              return true;\r\n            }\r\n            return false;\r\n          }"}],"items":[]}